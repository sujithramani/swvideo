console.log("SW startup");


//importScripts('serviceworker-cache-polyfill.js');


var CACHE_NAME = 'my-site-cache-v1';
var urlsToCache = [   	
			'./',
   		  './images/imagesSW.png',
        	 './images/important-notes.png',
 		'./images/index.png',
		'./images/smile.jpg',
 		 './js/main.js'


];
	
/*

//console.log("SW install started");
self.addEventListener('install', function (event) {
  console.log("SW installed");
    event.waitUntil(
       caches.open(CACHE_NAME)
           .then(function (cache) {
              console.log('Opened cache:'+ urlsToCache);    
          	 return cache.addAll(urlsToCache);
        console.log("Activating");
           })
    );
}); 
*/

//var version = 'v1::';	
self.addEventListener("install", function(event) {
  console.log('WORKER: install event in progress.');
  event.waitUntil(   
    caches 
    //  .open(version + 'fundamentals')   
      .open(CACHE_NAME)   
       .then(function(cache) {
	console.log("allow ?");       
     return cache.put(urlsToCache, new Response("From the cache!"));    
  //   return cache.addAll(urlsToCache);
      })
      .then(function() {
        console.log('WORKER: install completed');     
      })	
  );
});



self.addEventListener('activate', function(event) {
console.log("Activating...");
  event.waitUntil(
    caches.keys().then(function(cacheNames) {
      return Promise.all(
        cacheNames.filter(function(cacheName) {
          return cacheName !== CACHE_NAME;
	console.log("Activated");
        })
       .map(function(cacheName) {
          console.log('Deleting '+ cacheName);
          return caches(cacheName);
        }) 
      ); 
    })
  );
});

/*
self.addEventListener('fetch', function(event) {
	console.log("Fecting....!!!");
event.respondWith(
  
  );
});

*/
/*

self.addEventListener('fetch', function(event) {
	console.log("Fecting....!!!");
  event.respondWith(
    caches.match(event.request)
      .then(function(response) {      
        if (response) {
          return response;
        }
        var fetchRequest = event.request.clone();

        return fetch(fetchRequest).then(
          function(response) {
            if(!response || response.status !== 200 || response.type !== 'basic') {
              return response;
            }

            var responseToCache = response.clone();
            caches.open(CACHE_NAME)
              .then(function(cache) {
                cache.put(event.request, responseToCache);
              });

            return response;
          }
        );
      })
    );
}); */

self.addEventListener('fetch', function(event) {
console.log("Fecting....!!!");
  event.respondWith(
    caches.match(event.request).then(function(resp) {
      return resp || fetch(event.request).then(function(response) {
        caches.open('CACHE_NAME').then(function(cache) {
          cache.put(event.request, response.clone());
        });
        return response;
      });
    }).catch(function() {
      return caches.match('Hello World');
    })
  );
});

